unit Cliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.Grids,
  Vcl.DBGrids, Vcl.Mask, Vcl.Buttons, IdBaseComponent, IdComponent,
  IdTCPConnection, IdTCPClient, IdDayTime, Vcl.WinXPickers,  FireDAC.Comp.Client;

type
  TFrmCliente = class(TForm)
    Label1: TLabel;
    Label3: TLabel;
    Label5: TLabel;
    btnNovo: TSpeedButton;
    btnSalvar: TSpeedButton;
    btnEditar: TSpeedButton;
    btnExcluir: TSpeedButton;
    EdtBuscarNome: TEdit;
    rbNome: TRadioButton;
    rbCPF: TRadioButton;
    EdtBuscasCPF: TMaskEdit;
    EdtEndereco: TEdit;
    EdtCPF: TMaskEdit;
    EdtTelefone: TMaskEdit;
    DBGrid1: TDBGrid;
    Label6: TLabel;
    CbEstado: TComboBox;
    Label7: TLabel;
    CbCidade: TComboBox;
    Label8: TLabel;
    EdtBairro: TEdit;
    Label9: TLabel;
    EdtCEP: TEdit;
    Label2: TLabel;
    EdtNome: TEdit;
    DateNascimento: TDatePicker;
    Label4: TLabel;
    Label10: TLabel;
    procedure btnNovoClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure CbEstadoChange(Sender: TObject);
    procedure btnEditarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure DBGrid1CellClick(Column: TColumn);
    procedure DBGrid1DblClick(Sender: TObject);
    procedure FormDblClick(Sender: TObject);
    procedure rbNomeClick(Sender: TObject);
    procedure rbCPFClick(Sender: TObject);
    procedure EdtBuscarNomeChange(Sender: TObject);
    procedure EdtBuscasCPFChange(Sender: TObject);
  private

    procedure limpar;
    procedure habilitarCampos;
    procedure desabilitarCampos;

    procedure associarCampos;
    procedure listar;

    procedure carregarCombobox(query: TFDQuery; combo: TComboBox; campoNome: string; campoId: string);
    procedure buscarNome;
    procedure buscarCPFCNPJ;

  public
    { Public declarations }
  end;

var
  FrmCliente: TFrmCliente;

  id : string;
  cpfAntigo : string;
  id_cliente_selecionado: Integer;


implementation

{$R *.dfm}

uses Modulo;

{ TFrmCliente }

procedure TFrmCliente.associarCampos;
begin
  dm.tb_cliente.FieldByName('nome').value :=edtnome.Text;
  dm.tb_cliente.FieldByName('documento').value :=EdtCPF.Text;
  dm.tb_cliente.FieldByName('data_nascimento').value :=DateNascimento.Date;
  dm.tb_cliente.FieldByName('telefone').value :=EdtTelefone.Text;
  dm.tb_cliente.FieldByName('bairro').value :=EdtBairro.Text;
  dm.tb_cliente.FieldByName('cep').value :=EdtCEP.Text;
  dm.tb_cliente.FieldByName('endereco').value :=EdtEndereco.Text;
  if cbEstado.ItemIndex >= 0 then
    dm.tb_cliente.FieldByName('estado_id').AsInteger := Integer(cbEstado.Items.Objects[cbEstado.ItemIndex]);

  if cbCidade.ItemIndex >= 0 then
    dm.tb_cliente.FieldByName('cidade_id').AsInteger := Integer(cbCidade.Items.Objects[cbCidade.ItemIndex]);

    // dm.tb_cliente.FieldByName('data').value :=DateToStr(date);
end;

procedure TFrmCliente.btnEditarClick(Sender: TObject);
var
  cpf: string;
begin
  if Trim(EdtNome.Text) = '' then
  begin
    MessageDlg('Preencha o Nome', TMsgDlgType.mtInformation, mbOKCancel, 0);
    EdtNome.SetFocus;
    exit;
  end;

  if Trim(Edtcpf.Text) = '' then
  begin
    MessageDlg('Preencha o Documento', TMsgDlgType.mtInformation, mbOKCancel, 0);
    Edtcpf.SetFocus;
    exit;
  end;

  if cpfAntigo <> EdtCPF.Text then
  begin
    dm.query_cliente.Close;
    dm.query_cliente.SQL.Clear;
    dm.query_cliente.SQL.Add('select * from cliente where documento = ' + QuotedStr(trim(EdtCPF.Text)));
    dm.query_cliente.Open;

    if not dm.query_cliente.IsEmpty then
    begin
      cpf := dm.query_cliente['documento'];
      MessageDlg('O documento ' + cpf + ' já está salvo', TMsgDlgType.mtInformation, mbOKCancel, 0);
      EdtCPF.Text := '';
      EdtCPF.SetFocus;
      exit;
    end;
  end;

  // Aqui entra o modo de edição do dataset correto
  dm.tb_cliente.Edit;

  dm.tb_cliente.FieldByName('nome').Value := EdtNome.Text;
  dm.tb_cliente.FieldByName('documento').Value := EdtCPF.Text;
  dm.tb_cliente.FieldByName('data_nascimento').Value := DateNascimento.Date;
  dm.tb_cliente.FieldByName('telefone').Value := EdtTelefone.Text;
  dm.tb_cliente.FieldByName('bairro').Value := EdtBairro.Text;
  dm.tb_cliente.FieldByName('cep').Value := EdtCEP.Text;
  dm.tb_cliente.FieldByName('endereco').Value := EdtEndereco.Text;

  if cbEstado.ItemIndex >= 0 then
    dm.tb_cliente.FieldByName('estado_id').AsInteger := Integer(cbEstado.Items.Objects[cbEstado.ItemIndex]);

  if cbCidade.ItemIndex >= 0 then
    dm.tb_cliente.FieldByName('cidade_id').AsInteger := Integer(cbCidade.Items.Objects[cbCidade.ItemIndex]);

  dm.tb_cliente.Post;

  MessageDlg('Editado com sucesso!', TMsgDlgType.mtInformation, mbOKCancel, 0);

  limpar;
  desabilitarCampos;
  listar;
  btnEditar.Enabled := False;
  btnExcluir.Enabled := False;
end;


procedure TFrmCliente.btnExcluirClick(Sender: TObject);
begin
if MessageDlg('Deseja Excluir o registro?', mtConfirmation, [mbYes, mbNo], 0) = mrYes then
begin
  dm.tb_cliente.Delete;
    MessageDlg('Deletado com Sucesso!!', mtInformation, mbOKCancel, 0);


     btnEditar.Enabled := false;
     BtnExcluir.Enabled := false;
     edtNome.Text := '';
     listar;
end;
end;

procedure TFrmCliente.btnNovoClick(Sender: TObject);
begin
  dm.tb_cliente.Insert;
  habilitarCampos;
  btnSalvar.Enabled := true;
  btnEditar.Enabled := False;
  btnExcluir.Enabled := False;
  limpar;
end;

procedure TFrmCliente.btnSalvarClick(Sender: TObject);
begin
var
  cpf : string;

    if Trim(Edtcpf.Text) = '' then
  begin
      MessageDlg('Preencha o Cpf', TMsgDlgType.mtInformation, mbOKCancel, 0);
      Edtcpf.SetFocus;
      exit;
  end;

      if Trim(EdtNome.Text) = '' then
  begin
      MessageDlg('Preencha o Nome', TMsgDlgType.mtInformation, mbOKCancel, 0);
      EdtNome.SetFocus;
      exit;
  end;

  // VERIFICAR SE O cpf JA ESTA CADASTRADO
  dm.query_cliente.sql.Clear;
  dm.query_cliente.sql.add('select * from cliente where documento =' + QuotedStr(trim(Edtcpf.Text)));
  dm.query_cliente.Open();

  if not dm.query_cliente.IsEmpty then
    begin
      cpf := dm.query_cliente['documento'];
      MessageDlg('O cpf ' + cpf + ' ja esta salvo', TMsgDlgType.mtInformation, mbOKCancel, 0);
      edtNome.Text := '';
      EdtNome.SetFocus;
      exit;
    end;


  associarCampos;
  dm.tb_cliente.Post;
  messageDlg('Salvo com sucesso',mtInformation,mbOKCancel,0);
  limpar;
  desabilitarCampos;
  listar;

end;

procedure TFrmCliente.buscarCPFCNPJ;
begin     // buscar cliente pelo nome
  dm.query_Listar_Cliente.sql.Clear;
    dm.query_Listar_Cliente.SQL.Add(
    'SELECT a.id, a.nome, a.documento, a.data_nascimento, a.telefone, ' +
    'b.nome AS cidade, c.nome AS estado, a.bairro, a.cep, a.endereco ' +
    'FROM cliente a ' +
    'JOIN municipio b ON a.cidade_id = b.id ' +
    'JOIN uf c ON a.estado_id = c.id ' +
    'WHERE a.documento LIKE :documento'
  );
  dm.query_Listar_Cliente.ParamByName('documento').Value := EdtBuscascpf.Text + '%';
  dm.query_Listar_Cliente.Open();

end;

procedure TFrmCliente.buscarNome;
begin
    // uscar cliente pelo nome
  dm.query_Listar_Cliente.sql.Clear;
  dm.query_Listar_Cliente.SQL.Add(
    'SELECT a.id, a.nome, a.documento, a.data_nascimento, a.telefone, ' +
    'b.nome AS cidade, c.nome AS estado, a.bairro, a.cep, a.endereco ' +
    'FROM cliente a ' +
    'JOIN municipio b ON a.cidade_id = b.id ' +
    'JOIN uf c ON a.estado_id = c.id ' +
    'WHERE a.nome LIKE :nome'
  );
  dm.query_Listar_Cliente.ParamByName('nome').Value := EdtBuscarNome.Text + '%';
  dm.query_Listar_Cliente.Open();
end;


procedure TFrmCliente.carregarCombobox(query: TFDQuery; combo: TComboBox; campoNome: string; campoId: string);
begin
  if not query.Active then
  query.Open;

  combo.Items.Clear;
  query.First;

  while not query.Eof do
  begin
    combo.Items.AddObject(query.FieldByName(campoNome).AsString,
                          TObject(query.FieldByName(campoId).AsInteger));
    query.Next;
  end;
end;


procedure TFrmCliente.CbEstadoChange(Sender: TObject);
var
  estadoId: Integer;
begin
  // Pega o ID do estado selecionado usando o ItemIndex
  if cbEstado.ItemIndex >= 0 then
  begin
    estadoId := Integer(cbEstado.Items.Objects[cbEstado.ItemIndex]);

    // Atualiza a query das cidades com base no estado
    dm.query_municipio.Close;
    dm.query_municipio.SQL.Clear;
    dm.query_municipio.SQL.add ('SELECT id, nome, ufid FROM municipio WHERE ufid = :id');
    dm.query_municipio.ParamByName('id').AsInteger := estadoId;
    dm.query_municipio.Open;

    // Limpa e carrega as cidades no ComboBox
    cbCidade.Items.Clear;
    while not dm.query_municipio.Eof do
    begin
      cbCidade.Items.AddObject(dm.query_municipio.FieldByName('nome').AsString,
                                TObject(dm.query_municipio.FieldByName('id').AsInteger));
      dm.query_municipio.Next;
    end;

    cbCidade.Enabled := True;  // Habilita o combo da cidade
  end
  else
  begin
    cbCidade.Items.Clear;
    cbCidade.Enabled := False;
  end;
end;

procedure TFrmCliente.DBGrid1CellClick(Column: TColumn);
begin
  habilitarCampos;
  btnEditar.Enabled := True;
  btnExcluir.Enabled := True;
  dm.tb_cliente.Edit;

  id_cliente_selecionado := dm.query_Listar_Cliente.FieldByName('id').AsInteger;


  if not dm.query_Listar_Cliente.FieldByName('nome').IsNull then
    EdtNome.Text := dm.query_Listar_Cliente.FieldByName('nome').AsString;

 if not dm.query_Listar_Cliente.FieldByName('data_nascimento').IsNull then
    DateNascimento.Date := dm.query_Listar_Cliente.FieldByName('data_nascimento').AsDateTime;

  if not dm.query_Listar_Cliente.FieldByName('documento').IsNull then
    EdtCpf.Text := dm.query_Listar_Cliente.FieldByName('documento').AsString;

  if not dm.query_Listar_Cliente.FieldByName('bairro').IsNull then
    EdtBairro.Text := dm.query_Listar_Cliente.FieldByName('bairro').AsString;

  if not dm.query_Listar_Cliente.FieldByName('cep').IsNull then
    EdtCEP.Text := dm.query_Listar_Cliente.FieldByName('cep').AsString;

  if not dm.query_Listar_Cliente.FieldByName('estado').IsNull then
    CbEstado.Text := dm.query_Listar_Cliente.FieldByName('estado').AsString;

  if not dm.query_Listar_Cliente.FieldByName('cidade').IsNull then
    CbCidade.Text := dm.query_Listar_Cliente.FieldByName('cidade').AsString;

  if not dm.query_Listar_Cliente.FieldByName('telefone').IsNull then
    EdtTelefone.Text := dm.query_Listar_Cliente.FieldByName('telefone').AsString;

  if not dm.query_Listar_Cliente.FieldByName('endereco').IsNull then
    EdtEndereco.Text := dm.query_Listar_Cliente.FieldByName('endereco').AsString;

    //id := dm.query_cliente.FieldByName('id').value;

  cpfAntigo := dm.query_Listar_Cliente.FieldByName('documento').AsString;
end;

procedure TFrmCliente.DBGrid1DblClick(Sender: TObject);
begin
        if chamada2 = 'Cliente' then
        begin
          nomeCliente := dm.query_Listar_Cliente.FieldByName('nome').value;
          telefoneCliente:= dm.query_Listar_Cliente.FieldByName('telefone').value;
          close;
          chamada := '';
        end;


end;


procedure TFrmCliente.desabilitarCampos;
begin
    EdtNome.Enabled := false;
    EdtCPF.Enabled := false;
    EdtEndereco.Enabled := false;
    EdtTelefone.Enabled := false;
    CbEstado.Enabled := false;
    CbCidade.Enabled := false;
    EdtCEP.Enabled := false;
    DateNascimento.Enabled := false;
    EdtBairro.Enabled := false;

end;


procedure TFrmCliente.EdtBuscarNomeChange(Sender: TObject);
begin
buscarNome;
end;

procedure TFrmCliente.EdtBuscasCPFChange(Sender: TObject);
begin
buscarCPFCNPJ;
end;

procedure TFrmCliente.FormCreate(Sender: TObject);
begin
dm.tb_cliente.Active := true;

  if not dm.query_uf.Active then
    dm.query_uf.Open;

listar
end;


procedure TFrmCliente.FormDblClick(Sender: TObject);
begin
        if chamada2 = 'Listar_Cliente' then
        begin
          idCliente := dm.query_Listar_Cliente.FieldByName('nome').value;
          close;
          chamada2 := '';
        end;

end;

procedure TFrmCliente.FormShow(Sender: TObject);
begin
carregarComboBox(dm.query_uf, cbEstado, 'nome', 'id');

 // Não carregue cidades aqui ainda  apenas após seleção do estado
  cbCidade.Enabled := False;
  EdtBuscasCPF.Visible :=false;
  rbNome.Checked := true;

end;

procedure TFrmCliente.habilitarCampos;
begin
    EdtNome.Enabled := true;
    EdtCPF.Enabled := true;
    EdtEndereco.Enabled := true;
    EdtTelefone.Enabled := true;
    CbEstado.Enabled := true;
    //Cidade.Enabled := true;
    EdtCEP.Enabled := true;
    DateNascimento.Enabled := true;
    EdtBairro.Enabled := true;

end;

procedure TFrmCliente.limpar;
begin
    edtnome.text := '';
    EdtCPF.text := '';
    EdtEndereco.text := '';
    EdtTelefone.text := '';
    EdtBairro.text := '';
end;

procedure TFrmCliente.listar;
begin
  dm.query_Listar_Cliente.sql.Clear;
  dm.query_Listar_Cliente.SQL.Add(
    'SELECT a.*, b.nome AS cidade, c.nome AS estado ' +
    'FROM cliente a ' +
    'JOIN municipio b ON a.cidade_id = b.id ' +
    'JOIN uf c ON a.estado_id = c.id');
  dm.query_Listar_Cliente.Open;
end;

procedure TFrmCliente.rbCPFClick(Sender: TObject);
begin
Listar;
EdtBuscasCPF.Visible := true;
EdtBuscarNome.Visible := false;
end;

procedure TFrmCliente.rbNomeClick(Sender: TObject);
begin
Listar;
EdtBuscasCPF.Visible := false;
EdtBuscarNome.Visible := true;
end;

end.
